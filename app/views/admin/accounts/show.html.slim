.row
  .col-6
    .card
      .card-header
        | Настройки
      .card-body
        = simple_form_for(account, url: admin_account_path) do |f|
          = f.error_notification
          = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

          .form-inputs
            = f.input :subdomain
            = f.input :verification_callback_url
            = f.input :email_from
            = f.input :return_url

          .form-actions
            = f.button :submit, class: 'btn btn-success', value: 'Сохранить'

  .col-6
    .card
      .card-header
        | Секрет
      .card-body
        = account.secret
        br
        = link_to 'создать новый', recreate_secret_admin_account_path, method: :post, 'data-confirm': "Точно создать новый секрет?", class: 'btn btn-success'
    br
    .card
      .card-header
        | Описание для формы
      .card-body
        = simple_form_for(account, url: admin_account_path) do |f|
          = f.error_notification
          = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

          div Доступные переменные:
          ul
            -account.interpolate_hash.each do |key, value|
              li %{#{key}} => #{value}
          br
          .form-inputs
            = f.input :form_description, label: false, input_html: {rows: 12}

          .form-actions
            = f.button :submit, class: 'btn btn-success', value: 'Сохранить'
          hr
            div =raw account.form_description_interpolated

br

.row
  .col-6
    .card
      .card-header
        | Проверка отправки уведомлений
      .card-body
        = simple_form_for :data, url: verification_callback_test_admin_account_path, html: { id: "verification_callback_form" }, remote: true do |f|
          = f.input :external_id, input_html: { value: '123' }, label: :external_id, required: true
          = f.input :applicant_id, input_html: { value: '1' }, label: :applicant_id, required: true
          = f.input :verification_id, input_html: { value: '1' }, label: :verification_id, required: true
          = f.input :email, input_html: { value: 'test@test.test' }, label: :email, required: true
          = f.input :status, collection: Verification::STATUSES, label: :status, selected: Verification::STATUSES.first, include_blank: false

          = f.button :submit, class: 'btn btn-success', value: 'Отправить'
      .card-footer#verification_callback_result

  .col-6
    .card
      .card-header
        | Пример уведомления
      .card-body
        pre
          | Content-Type: application/json
          br
          br
          |
            {
              external_id: "123"      # Внешний ID аккаунт проходящего верификацию
              applicant_id: 1         # ID апликанта в Агнесса
              verification_id: 22     # ID заявки
              email: "test@test.test" # Email пользователя из заявки
              status: "pending"       # Статус заявки, возможные status: #{Verification::STATUSES}
            }