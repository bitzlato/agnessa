javascript:
  function attachFileInput({id}) {
    var tmpPath = '/uploads/tmp/'
    var fileInputContainer = document.getElementById(id);
    var removeInput = fileInputContainer.querySelector('[data-remove-input]');

    if (!fileInputContainer) {
      console.error('Element by id', id, 'not found');
      return;
    }

    var inputs = fileInputContainer.querySelectorAll('[data-input]');

    if (!inputs) {
      return;
    }

    var inputsList = Array.from(inputs);

    var clearFileButton = fileInputContainer.querySelector('[data-clear-button]');
    var previewPlaceholder = fileInputContainer.querySelector('[data-preview-placeholder]');
    var preview = fileInputContainer.querySelector('[data-preview]');

    function toggleShowFilename(fileName) {
      var photoInputControls = fileInputContainer.querySelector('[data-controls]')
      var photoFilename = fileInputContainer.querySelector('[data-filename-container]');

      if (fileName) {
        photoInputControls.style.display = 'none';
        photoFilename.style.display = 'block';

        var fileNameContainer = photoFilename.querySelector('[data-filename]');
        fileNameContainer.innerHTML = fileName;
      } else {
        photoInputControls.style.display = 'block';
        photoFilename.style.display = 'none';
      }
    }

    function toggleShowPreview(file) {
      if (file) {
        var src = URL.createObjectURL(file);
        preview.src = src;
        preview.style.display = 'block';
        previewPlaceholder.style.display = 'none';
      } else {
        preview.src = '';
        preview.style.display = 'none';
        previewPlaceholder.style.display = 'block';
      }
    }


    function onInputChange(event) {
      var input = event.target;
      if (input.files && input.files[0]) {
        var fileName = input.files[0].name;
        toggleShowFilename(fileName);
        toggleShowPreview(input.files[0])
        removeInput.value = '1';
      } else {
        toggleShowFilename();
        toggleShowPreview();
        removeInput.value = '';
      }
    }

    function toggleCachedPreview(filePath) {
        if (filePath) {
            preview.src = filePath;
            preview.style.display = 'block';
            previewPlaceholder.style.display = 'none';
        } else {
            preview.src = '';
            preview.style.display = 'none';
            previewPlaceholder.style.display = 'block';
        }
    }

    function showCachedPhoto(input) {
        var file_cache_index = input.dataset.index;
        var cacheUrl = tmpPath + document.querySelector(`#verification_verification_documents_attributes_${file_cache_index}_file_cache`).value;
        var fileName = cacheUrl.replace(/^.*[\\\/]/, '')

        if (fileName) {
            toggleShowFilename(fileName);
            toggleCachedPreview(cacheUrl)
        } else {
            toggleShowFilename();
            toggleCachedPreview();
        }
    }

    function clearFile() {
      inputsList.forEach(input => {
        if (input) {
          input.value = '';
        }
      });

      removeInput.value = '1';

      toggleShowFilename();
      toggleShowPreview();
    }

    inputsList.forEach(input => {
      if (input) {
        input.addEventListener('change', onInputChange);
        showCachedPhoto(input);
      }
    });

    clearFileButton.addEventListener('click', clearFile);
  }
